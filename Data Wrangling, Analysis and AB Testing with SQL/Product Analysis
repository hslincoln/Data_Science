--Exercise 0: Count how many users we have

SELECT COUNT(*) AS user_count
FROM dsv1069.users

--Exercise 1: Find out how many users have ever ordered

SELECT COUNT(DISTINCT user_id) AS user_ordered
FROM dsv1069.orders

--Exercise 2:
--Goal find how many users have reordered the same item

SELECT user_id,
       item_id,
       COUNT(DISTINCT line_item_id) AS times_item_ordered
FROM dsv1069.orders
GROUP BY user_id, item_id

--Exercise 3:
--Do users even order more than once?

SELECT user_id,
       COUNT(DISTINCT invoice_id) AS order_count
FROM dsv1069.orders
GROUP BY user_id

--Exercise 4:
--Orders per item

SELECT item_id,
       COUNT(line_item_id) AS times_item_ordered
FROM dsv1069.orders
GROUP BY item_id

--Exercise 5:
--Orders per category

SELECT item_category,
       COUNT(line_item_id) AS times_item_ordered
FROM dsv1069.orders
GROUP BY item_category

--Exercise 6:
--Goal: Do user order multiple things from the same category?

SELECT user_id,
       item_category,
       COUNT(DISTINCT line_item_id) AS times_category_ordered
FROM dsv1069.orders
GROUP BY user_id, item_category

--Exercise 7:
--Goal: Find the average time between orders
--Decide if this analysis is necessary

SELECT item_category,
       AVG(times_category_ordered) AS avg_order_time_category
FROM (SELECT user_id,
             item_category,
             COUNT(DISTINCT line_item_id) AS times_category_ordered
      FROM dsv1069.orders
      GROUP BY user_id, item_category) AS user_level
GROUP BY item_category
