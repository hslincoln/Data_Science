--Exercise 1: We’ll be using the users table to answer the question “How many new users are
--added each day?“. Start by making sure you understand the columns in the table.

SELECT id,
       parent_user_id,
       merged_at
FROM dsv1069.users
ORDER BY parent_user_id

--Exercise 2: WIthout worrying about deleted user or merged users, count the number of users
--added each day.

SELECT date(created_at) AS day,
       COUNT(*) AS user_count
FROM dsv1069.users
GROUP BY day

--Exercise 3: Consider the following query. Is this the right way to count merged or deleted
--users? If all of our users were deleted tomorrow what would the result look like?

SELECT date(created_at) AS day,
       COUNT(*) AS users
FROM dsv1069.users
WHERE deleted_at IS NULL
AND (id<>parent_user_id OR parent_user_id IS NULL)
GROUP BY date(created_at)

--Exercise 4: Count the number of users deleted each day. Then count the number of users
--removed due to merging in a similar way.

SELECT date(created_at) AS date,
       COUNT(*) AS user_deleted
FROM dsv1069.users
WHERE deleted_at IS NOT NULL 
GROUP BY date

--Exercise 5: Use the pieces you’ve built as subtables and create a table that has a column for
--the date, the number of users created, the number of users deleted and the number of users
--merged that day.

SELECT new.day,
       new.new_added_users,
       deleted.user_deleted,
       merged.user_merged
FROM
(SELECT date(created_at) AS day,
       COUNT(*) AS new_added_users
 FROM dsv1069.users
 GROUP BY day) new
 LEFT JOIN 
(SELECT date(deleted_at) AS day,
        COUNT(*) AS user_deleted
 FROM dsv1069.users
 WHERE deleted_at IS NOT NULL 
 GROUP BY day) deleted
ON deleted.day=new.day 
LEFT JOIN
(SELECT date(merged_at) AS day,
        COUNT(*) AS user_merged
 FROM dsv1069.users
 WHERE id<>parent_user_id
 AND parent_user_id IS NOT NULL
 GROUP BY day) merged 
 ON merged.day=new.day
 
 --Exercise 6: Refine your query from #5 to have informative column names and so that null
--columns return 0.

SELECT new.day,
       new.new_added_users,
       COALESCE(deleted.user_deleted,0) AS deleted_user,
       COALESCE(merged.user_merged,0) AS merged_user,
       (new.new_added_users-COALESCE(deleted.user_deleted,0)-COALESCE(merged.user_merged,0)) AS net_added_user
FROM
(SELECT date(created_at) AS day,
       COUNT(*) AS new_added_users
 FROM dsv1069.users
 GROUP BY day) new
 LEFT JOIN 
(SELECT date(deleted_at) AS day,
        COUNT(*) AS user_deleted
 FROM dsv1069.users
 WHERE deleted_at IS NOT NULL 
 GROUP BY day) deleted
ON deleted.day=new.day 
LEFT JOIN
(SELECT date(merged_at) AS day,
        COUNT(*) AS user_merged
 FROM dsv1069.users
 WHERE id<>parent_user_id
 AND parent_user_id IS NOT NULL
 GROUP BY day) merged 
 ON merged.day=new.day
