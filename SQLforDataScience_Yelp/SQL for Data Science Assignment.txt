Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000 
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537(user_id)/3979(business_id) 
ix. User = 10000
x. Friend = 11(user_id)
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer: 

SELECT *
FROM user
WHERE id IS NULL
   OR name IS NULL
   OR review_count IS NULL
   OR yelping_since IS NULL
   OR useful IS NULL
   OR funny IS NULL
   OR cool IS NULL
   OR fans IS NULL
   OR average_stars IS NULL
   OR compliment_hot IS NULL
   OR compliment_more IS NULL
   OR compliment_profile IS NULL
   OR compliment_cute IS NULL
   OR compliment_list IS NULL
   OR compliment_note IS NULL
   OR compliment_plain IS NULL
   OR compliment_cool IS NULL
   OR compliment_funny IS NULL
   OR compliment_writer IS NULL
   OR compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0		max: 5.0		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max:	2 	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT city,
       SUM(review_count) AS num_review_count
FROM business
GROUP BY city
ORDER BY num_review_count DESC  
	
	
	Copy and Paste the Result Below:
+-----------------+------------------+
| city            | num_review_count |
+-----------------+------------------+
| Las Vegas       |            82854 |
| Phoenix         |            34503 |
| Toronto         |            24113 |
| Scottsdale      |            20614 |
| Charlotte       |            12523 |
| Henderson       |            10871 |
| Tempe           |            10504 |
| Pittsburgh      |             9798 |
| Montréal        |             9448 |
| Chandler        |             8112 |
| Mesa            |             6875 |
| Gilbert         |             6380 |
| Cleveland       |             5593 |
| Madison         |             5265 |
| Glendale        |             4406 |
| Mississauga     |             3814 |
| Edinburgh       |             2792 |
| Peoria          |             2624 |
| North Las Vegas |             2438 |
| Markham         |             2352 |
| Champaign       |             2029 |
| Stuttgart       |             1849 |
| Surprise        |             1520 |
| Lakewood        |             1465 |
| Goodyear        |             1155 |
+-----------------+------------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars,
       COUNT(stars) AS num_stars
FROM business
WHERE city='Avon'
GROUP BY stars
ORDER BY num_stars DESC


Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+-----------+
| stars | num_stars |
+-------+-----------+
|   3.5 |         3 |
|   2.5 |         2 |
|   4.0 |         2 |
|   1.5 |         1 |
|   4.5 |         1 |
|   5.0 |         1 |
+-------+-----------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT stars,
       COUNT(stars) AS num_stars
FROM business
WHERE city='Beachwood'
GROUP BY stars
ORDER BY num_stars DESC


Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+-----------+
| stars | num_stars |
+-------+-----------+
|   5.0 |         5 |
|   3.0 |         2 |
|   3.5 |         2 |
|   4.5 |         2 |
|   2.0 |         1 |
|   2.5 |         1 |
|   4.0 |         1 |
+-------+-----------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
SELECT name,
       review_count
FROM user
ORDER BY review_count DESC
LIMIT 3
		
	Copy and Paste the Result Below:
		
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+


8. Does posing more reviews correlate with more fans? No, posing more reviews does not correlate with more fans.

SELECT name,
       review_count,
       fans
FROM user
ORDER BY review_count DESC

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)

	Please explain your findings and interpretation of the results:
	
No. The data about review count and fans are extracted from the table "user", and it was found out that users with more reviews do not necessarily have more fans.
Therefore, posing more reviews does not correlate with more fans.

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: More reviews with the word "love"

+---------------+---------------+
| num_love_text | num_hate_text |
+---------------+---------------+
|          1780 |           232 |
+---------------+---------------+

	
	SQL code used to arrive at answer:

SELECT(SELECT COUNT(id)
       FROM review
       WHERE text LIKE '%love%') AS num_love_text,
       (SELECT COUNT(id)
        FROM review
        WHERE text LIKE '%hate%') AS num_hate_text 

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT name,
       fans
FROM user
ORDER BY fans DESC
LIMIT 10
	
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

Yes. The higher rated group either opens earlier than the lower rated group but with same amount of hours, or its business hours are shorter than the lower rated group.

ii. Do the two groups you chose to analyze have a different number of reviews?

Yes. The higher rated group tend to have more reviews than the lower rated group.         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Yes. The location data indicates that the higher rated group is either on the north side or north west side of the lower rated group.

SQL code used for analysis:

SELECT b.name,
       b.city,
       b.longitude,
       b.latitude,
       b.review_count,
       h.hours,
       (CASE WHEN b.stars BETWEEN 2 AND 3 THEN '2-3'
             WHEN b.stars BETWEEN 4 AND 5 THEN '4-5'
             ELSE 'other' END) AS star_rating
FROM business b 
INNER JOIN hours h 
ON b.id=h.business_id 
WHERE b.id IN (SELECT business_id
               FROM category
               WHERE category='Restaurants')
AND b.city='Las Vegas'

--------------------+-----------+-----------+----------+--------------+-----------------------+-------------+
| name                | city      | longitude | latitude | review_count | hours                 | star_rating |
+---------------------+-----------+-----------+----------+--------------+-----------------------+-------------+
| Wingstop            | Las Vegas |   -115.21 |  36.1003 |          123 | Monday|11:00-0:00     | 2-3         |
| Wingstop            | Las Vegas |   -115.21 |  36.1003 |          123 | Tuesday|11:00-0:00    | 2-3         |
| Wingstop            | Las Vegas |   -115.21 |  36.1003 |          123 | Friday|11:00-0:00     | 2-3         |
| Wingstop            | Las Vegas |   -115.21 |  36.1003 |          123 | Wednesday|11:00-0:00  | 2-3         |
| Wingstop            | Las Vegas |   -115.21 |  36.1003 |          123 | Thursday|11:00-0:00   | 2-3         |
| Wingstop            | Las Vegas |   -115.21 |  36.1003 |          123 | Sunday|11:00-0:00     | 2-3         |
| Wingstop            | Las Vegas |   -115.21 |  36.1003 |          123 | Saturday|11:00-0:00   | 2-3         |
| Big Wong Restaurant | Las Vegas |   -115.21 |  36.1267 |          768 | Monday|10:00-23:00    | 4-5         |
| Big Wong Restaurant | Las Vegas |   -115.21 |  36.1267 |          768 | Tuesday|10:00-23:00   | 4-5         |
| Big Wong Restaurant | Las Vegas |   -115.21 |  36.1267 |          768 | Friday|10:00-23:00    | 4-5         |
| Big Wong Restaurant | Las Vegas |   -115.21 |  36.1267 |          768 | Wednesday|10:00-23:00 | 4-5         |
| Big Wong Restaurant | Las Vegas |   -115.21 |  36.1267 |          768 | Thursday|10:00-23:00  | 4-5         |
| Big Wong Restaurant | Las Vegas |   -115.21 |  36.1267 |          768 | Sunday|10:00-23:00    | 4-5         |
| Big Wong Restaurant | Las Vegas |   -115.21 |  36.1267 |          768 | Saturday|10:00-23:00  | 4-5         |
| Jacques Cafe        | Las Vegas |  -115.304 |  36.1933 |          168 | Monday|11:00-20:00    | 4-5         |
| Jacques Cafe        | Las Vegas |  -115.304 |  36.1933 |          168 | Tuesday|11:00-20:00   | 4-5         |
| Jacques Cafe        | Las Vegas |  -115.304 |  36.1933 |          168 | Friday|11:00-20:00    | 4-5         |
| Jacques Cafe        | Las Vegas |  -115.304 |  36.1933 |          168 | Wednesday|11:00-20:00 | 4-5         |
| Jacques Cafe        | Las Vegas |  -115.304 |  36.1933 |          168 | Thursday|11:00-20:00  | 4-5         |
| Jacques Cafe        | Las Vegas |  -115.304 |  36.1933 |          168 | Sunday|8:00-14:00     | 4-5         |
| Jacques Cafe        | Las Vegas |  -115.304 |  36.1933 |          168 | Saturday|11:00-20:00  | 4-5         |
+---------------------+-----------+-----------+----------+--------------+-----------------------+-------------+

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:

The businesses that are still open have higher star ratings on average than those ones that are closed.
         
         
ii. Difference 2:
         
The businesses that are still open also have more reviews on average than those closed ones.    
         
SQL code used for analysis:

SELECT (CASE WHEN is_open='1' THEN 'Open'
             WHEN is_open='0' THEN 'Closed'
             ELSE 'Other' END) AS open_or_closed,
        AVG(stars) AS avg_stars,
        AVG(review_count) AS avg_review_count
FROM business
GROUP BY open_or_closed

+----------------+---------------+------------------+
| open_or_closed |     avg_stars | avg_review_count |
+----------------+---------------+------------------+
| Closed         | 3.52039473684 |    23.1980263158 |
| Open           | 3.67900943396 |    31.7570754717 |
+----------------+---------------+------------------+	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

I chose to analyze the correlation between businesses' star ratings and the number of the businesses' photos in the category "Restaurants".
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
I will need three tables which are "business","category" and "photo". Two sets of data will be extracted: "stars" from "business", and total number of photos from "photo".
Since I want to analyze the correlation under the category "Restaurants", I need to join the table "business" and "category" first and extract the data under the category
"Restaurants",then join table "photo" and count the total number of photos to see if there's any correlation between star rating and number of photos in the industry "Restaurants".
The result shows that there is no certain correlation between star rating and number of photos, in the other words, it means more photos do not necesarily help get higher star rating.

iii. Output of your finished dataset:

+-------+-----------+
| stars | num_photo |
+-------+-----------+
|   4.0 |         4 |
|   3.0 |         2 |
|   3.5 |         2 |
|   5.0 |         1 |
|   1.0 |         0 |
|   1.5 |         0 |
|   2.0 |         0 |
|   2.5 |         0 |
|   4.5 |         0 |
+-------+-----------+
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT b.stars,
       COUNT(p.id) AS num_photo
FROM business b 
LEFT JOIN photo p 
ON b.id=p.business_id
INNER JOIN category c 
ON b.id=c.business_id
WHERE c.category='Restaurants'
GROUP BY b.stars
ORDER BY num_photo DESC
